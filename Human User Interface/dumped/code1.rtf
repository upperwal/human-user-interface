{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red127\green0\blue85;\red0\green0\blue192;\red42\green0\blue255;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs22 \cf2 import\cf0  java.awt.image.BufferedImage;\
\cf2 import\cf0  java.awt.image.WritableRaster;\
\
\cf2 import\cf0  org.opencv.core.Core;\
\cf2 import\cf0  \ul org.opencv.core.CvType\ulnone ;\
\cf2 import\cf0  org.opencv.core.Mat;\
\cf2 import\cf0  org.opencv.core.Size;\
\cf2 import\cf0  org.opencv.highgui.Highgui;\
\cf2 import\cf0  org.opencv.highgui.VideoCapture;\
\cf2 import\cf0  org.opencv.imgproc.Imgproc;\
\
\cf2 public\cf0  \cf2 class\cf0  Main \{\
	\
	\cf2 public\cf0  \cf2 static\cf0  BufferedImage matToBufferedImage(Mat bgr) \{\
	    \cf2 int\cf0  width = bgr.width();\
	    \cf2 int\cf0  height = bgr.height();\
	    BufferedImage image;\
	    WritableRaster raster;\
\
	    \cf2 if\cf0  (bgr.channels()==1) \{\
	        image = \cf2 new\cf0  BufferedImage(width, height, BufferedImage.\cf3 TYPE_BYTE_GRAY\cf0 );\
	        raster = image.getRaster();\
\
	        \cf2 byte\cf0 [] px = \cf2 new\cf0  \cf2 byte\cf0 [1];\
\
	        \cf2 for\cf0  (\cf2 int\cf0  y=0; y<height; y++) \{\
	            \cf2 for\cf0  (\cf2 int\cf0  x=0; x<width; x++) \{\
	                bgr.get(y,x,px);\
	                raster.setSample(x, y, 0, px[0]);\
	            \}\
	        \}\
	    \} \cf2 else\cf0  \{\
	        image = \cf2 new\cf0  BufferedImage(width, height, BufferedImage.\cf3 TYPE_INT_RGB\cf0 );\
	        raster = image.getRaster();\
\
	        \cf2 byte\cf0 [] px = \cf2 new\cf0  \cf2 byte\cf0 [3];\
	        \cf2 int\cf0 [] rgb = \cf2 new\cf0  \cf2 int\cf0 [3];\
\
	        \cf2 for\cf0  (\cf2 int\cf0  y=0; y<height; y++) \{\
	            \cf2 for\cf0  (\cf2 int\cf0  x=0; x<width; x++) \{\
	                bgr.get(y,x,px);\
	                rgb[0] = px[2];\
	                rgb[1] = px[1];\
	                rgb[2] = px[0];\
	                raster.setPixel(x,y,rgb);\
	            \}\
	        \}\
	    \}\
\
	    \cf2 return\cf0  image;\
	\}\
	\
	\
    \cf2 public\cf0  \cf2 static\cf0  \cf2 void\cf0  main(String[] args) \cf2 throws\cf0  InterruptedException \{\
        System.loadLibrary(Core.\cf3 NATIVE_LIBRARY_NAME\cf0 );\
        VideoCapture cap = \cf2 new\cf0  VideoCapture(0);\
        Thread.sleep(3000);\
        \cf2 if\cf0 (!cap.isOpened())\
        	System.\cf3 out\cf0 .println(\cf4 "Camera not found"\cf0 );\
        \cf2 else\cf0  \{\
        	System.\cf3 out\cf0 .println(\cf4 "Yes! camera found"\cf0 );\
        	Mat frame = \cf2 new\cf0  Mat();\
        	cap.read(frame);\
        	Highgui.imwrite(\cf4 "file1.jpg"\cf0 , frame);\
        	Mat frame2 = \cf2 new\cf0  Mat();\
        	Imgproc.blur(frame, frame2, \cf2 new\cf0  Size(5,5));\
        	Highgui.imwrite(\cf4 "file2.jpg"\cf0 , frame2);\
        	matToBufferedImage(frame2);\
        	Thread.sleep(10000);\
        	cap.release();\
        \}\
    \}\
\}}